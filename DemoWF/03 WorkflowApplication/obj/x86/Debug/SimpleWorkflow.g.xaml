<?xml version="1.0" encoding="utf-8"?>
<_:SimpleWorkflow xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:_="clr-namespace:_03_WorkflowApplication;assembly=03 WorkflowApplication" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Text</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <_:SimpleWorkflow.Implementation>
    <Sequence>
      <Sequence.Variables>
        <Variable x:TypeArguments="x:TimeSpan" Name="DelayTimeSpan" />
        <Variable x:TypeArguments="s:DateTime" Name="StartTime" />
      </Sequence.Variables>
      <Assign>
        <Assign.To>
          <OutArgument x:TypeArguments="s:DateTime">
            <mca:CSharpReference x:TypeArguments="s:DateTime">StartTime</mca:CSharpReference>
          </OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="s:DateTime">
            <mca:CSharpValue x:TypeArguments="s:DateTime">DateTime.Now</mca:CSharpValue>
          </InArgument>
        </Assign.Value>
      </Assign>
      <WriteLine>
        <InArgument x:TypeArguments="x:String">
          <mca:CSharpValue x:TypeArguments="x:String">DateTime.Now.ToString()</mca:CSharpValue>
        </InArgument>
      </WriteLine>
      <Assign>
        <Assign.To>
          <OutArgument x:TypeArguments="x:TimeSpan">
            <mca:CSharpReference x:TypeArguments="x:TimeSpan">DelayTimeSpan</mca:CSharpReference>
          </OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:TimeSpan">
            <mca:CSharpValue x:TypeArguments="x:TimeSpan">TimeSpan.FromSeconds(3)</mca:CSharpValue>
          </InArgument>
        </Assign.Value>
      </Assign>
      <Delay>
        <InArgument x:TypeArguments="x:TimeSpan">
          <mca:CSharpValue x:TypeArguments="x:TimeSpan">DelayTimeSpan</mca:CSharpValue>
        </InArgument>
      </Delay>
      <WriteLine>
        <InArgument x:TypeArguments="x:String">
          <mca:CSharpValue x:TypeArguments="x:String">string.Format("Finished at:{0} \nexecution time:{1}",DateTime.Now,DateTime.Now.Subtract(StartTime))</mca:CSharpValue>
        </InArgument>
      </WriteLine>
      <sads:DebugSymbol.Symbol>9xCpuvQIeM50O38Bm/Y7GB9jX0Q6XFdvcmtmbG93Rm91bmRhdGlvbjRcbXlcV29ya2Zsb3ctRm91bmRhdGlvblxEZW1vV0ZcMDMgV29ya2Zsb3dBcHBsaWNhdGlvblxTaW1wbGVXb3JrZmxvdy54YW1sDR8DUg4CAQEkBTAOAgEVMQU2EQIBETcFQw4CAQpEBUkNAgEGSgVPEQIBAiwLLFcCARknCydcAgEWMwkzXgIBEj8LP2ICAQ46CzpgAgELRglGVgIBB0wJTKoBAgED</sads:DebugSymbol.Symbol>
    </Sequence>
  </_:SimpleWorkflow.Implementation>
</_:SimpleWorkflow>